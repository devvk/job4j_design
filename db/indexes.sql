/*
    КЛАСТЕРНЫЙ ИНДЕКС (Clustered Index) – создается по умолчанию на основании первичного ключа.

    - Работает быстро, определяет порядок данных в таблице.
    - Требует меньше памяти, т.к. индекс объединён с таблицей.
    - Таблица может иметь только один кластерный индекс.
    - Листовые узлы дерева содержат сами данные.
    - Физически упорядочивает строки таблицы на диске в соответствии с ключом индекса.
    - Быстрее при доступе к диапазону данных или сортировке по ключу.


    НЕКЛАСТЕРНЫЙ ИНДЕКС (Non-Clustered Index) - логический порядок индекса не соответствует
    физическому порядку хранения строк на диске.

    - Работает медленнее кластерного индекса, ключ индекса определяет порядок данных только в самом индексе.
    - Требует больше памяти, т.к. требуется отдельное место в памяти и на диске.
    - Таблица может иметь несколько некластерных индексов.
    - Листовые узлы содержат только ссылки (указатели) на строки таблицы.
    - Не влияет на физический порядок строк в таблице.
    - Медленнее при чтении данных, т.к. требует дополнительного доступа по ссылке.
*/
CREATE TABLE people (
    id         SERIAL PRIMARY KEY, -- кластерный индекс
    first_name VARCHAR(50),
    last_name  VARCHAR(50),
    phone      VARCHAR(50)
);

-- Структура таблицы
\d people

-- Создать НЕКЛАСТЕРНЫЙ индекс с сортировкой по убыванию.
-- CREATE INDEX имя_индекса ON имя_таблицы(имя_столбца);
CREATE INDEX people_last_name ON people(last_name DESC);

-- Изменить индекс
ALTER INDEX people_last_name RENAME TO people_last_name_desc;

-- Удалить индекс
DROP INDEX people_last_name_desc;

/*
    КЛАСТЕРНЫЙ = быстрое чтение, медленные вставки. Использовать, если:
     - Часто поиск по диапазону (даты, ID).
     - Часто сортировка (ORDER BY).
     - Выборка из разных столбцов.
     - Записи редко изменяются.

    НЕКЛАСТЕРНЫЙ = быстрые вставки, дополнительное место. Использовать, если:
     - Нужно несколько индексов.
     - Часто INSERT и UPDATE.
     - Часто поиск по значению (WHERE email = 'user@mail.com').


    ЧАСТИЧНЫЙ ИНДЕКС - строится по подмножеству строк таблицы, определяемому условным выражением.
    https://postgrespro.ru/docs/postgresql/17/indexes-partial

    CREATE INDEX orders_unbilled_index ON orders (order_nr)
    WHERE billed is not true;
*/


